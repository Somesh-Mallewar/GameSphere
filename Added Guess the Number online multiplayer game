#server side code
import socket
import threading
import random

class Server:
    def __init__(self, host, port):
        self.host = host
        self.port = port
        self.server_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
        self.clients = []
        self.number = None
        self.game_over = False

    def start(self):
        self.server_socket.bind((self.host, self.port))
        self.server_socket.listen(5)

        print("Server started. Waiting for players...")

        while len(self.clients) < 2:
            client_socket, address = self.server_socket.accept()
            print(f"New connection from {address[0]}:{address[1]}")

            if len(self.clients) == 0:
                self.number = random.randint(1, 100)

            self.clients.append(client_socket)
            client_thread = threading.Thread(target=self.handle_client, args=(client_socket,))
            client_thread.start()

        self.broadcast_message("Game started!")
        self.broadcast_message("Guess a number between 1 and 100.")

    def handle_client(self, client_socket):
        while not self.game_over:
            try:
                message = client_socket.recv(1024).decode()
                if message == "quit":
                    self.clients.remove(client_socket)
                    client_socket.close()
                    self.broadcast_message("A player has left the game.")
                    break
                else:
                    guess = int(message)
                    self.check_guess(client_socket, guess)
            except:
                break

    def check_guess(self, client_socket, guess):
        if guess < self.number:
            message = "Your guess is too low. Try again."
        elif guess > self.number:
            message = "Your guess is too high. Try again."
        else:
            message = "Congratulations! You guessed the number."
            self.game_over = True

        client_socket.send(message.encode())

    def broadcast_message(self, message):
        for client in self.clients:
            client.send(message.encode())

    def stop(self):
        self.server_socket.close()

server = Server('localhost', 1234)
server.start()

#Client-side code

import socket

class Client:
    def __init__(self, host, port):
        self.host = host
        self.port = port
        self.client_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)

    def start(self):
        self.client_socket.connect((self.host, self.port))

        print("Connected to the server.")

        while True:
            message = self.client_socket.recv(1024).decode()
            print(message)

            if "Congratulations" in message:
                break

            guess = input("Enter your guess (or 'quit' to exit): ")
            self.client_socket.send(guess.encode())

        self.client_socket.close()

client = Client('localhost', 1234)
client.start()
